{
  "permissions": {
    "allow": [
      "Bash(curl -I https://pulsedashboard.replit.app/api/admin/sov-prompt-template)",
      "Bash(grep -n \"SOV prompt template routes registered\" /home/runner/workspace/server/routes.ts)",
      "Bash(npm run dev)",
      "Bash(curl -X POST https://pulsedashboard.replit.app/api/login -H \"Content-Type: application/json\" -d '{\"\"email\"\":\"\"admin@example.com\"\",\"\"password\"\":\"\"admin123\"\"}' -c cookies.txt)",
      "Bash(curl -X GET https://pulsedashboard.replit.app/api/admin/sov-prompt-template -H \"Cookie: \")",
      "Bash(echo \"NODE_ENV=$NODE_ENV\")",
      "Bash(grep NODE_ENV /home/runner/workspace/.env)",
      "Bash(curl -X GET https://pulsedashboard.replit.app/api/admin/sov-prompt-template)",
      "Bash(curl -X GET https://pulsedashboard.replit.app/api/admin/sov-prompt-template -v)",
      "Bash(curl https://pulsedashboard.replit.app/api/admin/sov-prompt-template)",
      "Bash(curl https://pulsedashboard.replit.app/api/admin/sov-prompt-template -v)",
      "Bash(curl https://pulsedashboard.replit.app/api/diagnostic)",
      "Bash(curl http://localhost:5000/api/admin/sov-prompt-template)",
      "Bash(curl -X POST https://pulsedashboard.replit.app/api/login -H \"Content-Type: application/json\" -d '{\"\"\"\"email\"\"\"\":\"\"\"\"admin@pulsedashboard.com\"\"\"\",\"\"\"\"password\"\"\"\":\"\"\"\"cleardigital123\"\"\"\"}' -c replit-cookies.txt -v)",
      "Bash(curl -X GET https://pulsedashboard.replit.app/api/admin/sov-prompt-template -b replit-cookies.txt)",
      "Bash(grep DATABASE_URL /home/runner/workspace/.env)",
      "Bash(env)",
      "Bash(curl -X POST https://pulsedashboard.replit.app/api/admin/trigger-sov-create -b replit-cookies.txt)",
      "Bash(git log --oneline -1 --date=short --pretty=format:'%h %ad %s' a797267)",
      "Bash(npm run build)",
      "Bash(git add server/auth.ts server/routes.ts server/storage.ts)",
      "Bash(git commit -m \"Fix SOV prompt template endpoints - add auto-creation and fix auth\n\n- Add createSOVPromptTemplate method to storage\n- Auto-create default template when none exists  \n- Fix requireAdmin to support development auto-login\n- Ensure SOV routes work in production\")",
      "Bash(git push)",
      "Bash(npx depcheck:*)",
      "Bash(find:*)",
      "Bash(npm uninstall:*)",
      "Bash(npm install:*)",
      "Bash(npm run check:*)",
      "Bash(grep:*)",
      "Bash(cat:*)",
      "Bash(npm run:*)",
      "Bash(npx tsc:*)",
      "Bash(psql:*)",
      "Bash(pkill:*)",
      "Bash(NODE_ENV=development tsx server/index.ts)",
      "Bash(npx playwright:*)",
      "Bash(curl:*)",
      "Bash(node:*)",
      "Bash(kill:*)",
      "Bash(chmod:*)",
      "Read(//tmp/**)",
      "Bash(SCREENSHOTONE_API_KEY=96F3sSo7pcPB2Q npm run dev)",
      "Bash(echo:*)",
      "Bash(lsof:*)",
      "Bash(ss:*)",
      "Bash(./restart-server.sh:*)",
      "Bash(zip:*)",
      "Bash(/home/runner/workspace/client/src/components/effectiveness-card.tsx )",
      "Bash(/home/runner/workspace/client/src/components/effectiveness-ai-insights.tsx )",
      "Bash(/home/runner/workspace/client/src/components/charts/effectiveness-radar-chart.tsx )",
      "Bash(/home/runner/workspace/client/src/components/effectiveness-prompt-template-form.tsx )",
      "Bash(/home/runner/workspace/client/src/components/evidence-drawer.tsx )",
      "Bash(/home/runner/workspace/client/src/components/ui/drawer.tsx )",
      "Bash(/home/runner/workspace/server/routes/effectivenessRoutes.ts )",
      "Bash(/home/runner/workspace/server/services/effectiveness/types.ts )",
      "Bash(/home/runner/workspace/server/services/effectiveness/scorer.ts )",
      "Bash(/home/runner/workspace/server/storage.ts)",
      "Bash(rm:*)",
      "Bash(\"/home/runner/workspace/client/src/components/effectiveness-card.tsx\" )",
      "Bash(\"/home/runner/workspace/client/src/components/effectiveness-ai-insights.tsx\" )",
      "Bash(\"/home/runner/workspace/client/src/components/charts/effectiveness-radar-chart.tsx\" )",
      "Bash(\"/home/runner/workspace/client/src/components/effectiveness-prompt-template-form.tsx\" )",
      "Bash(\"/home/runner/workspace/client/src/components/evidence-drawer.tsx\" )",
      "Bash(\"/home/runner/workspace/client/src/components/ui/drawer.tsx\" )",
      "Bash(\"/home/runner/workspace/server/routes/effectivenessRoutes.ts\" )",
      "Bash(\"/home/runner/workspace/server/services/effectiveness/types.ts\" )",
      "Bash(\"/home/runner/workspace/server/services/effectiveness/scorer.ts\" )",
      "Bash(\"/home/runner/workspace/server/storage.ts\")",
      "Bash(unzip:*)",
      "Bash(tar:*)",
      "Bash(mv:*)",
      "Bash(client/src/components/effectiveness-card.tsx )",
      "Bash(client/src/components/effectiveness-ai-insights.tsx )",
      "Bash(client/src/components/charts/effectiveness-radar-chart.tsx )",
      "Bash(client/src/components/effectiveness-prompt-template-form.tsx )",
      "Bash(client/src/components/evidence-drawer.tsx )",
      "Bash(client/src/components/ui/drawer.tsx )",
      "Bash(server/routes/effectivenessRoutes.ts )",
      "Bash(server/services/effectiveness/types.ts )",
      "Bash(server/services/effectiveness/scorer.ts )",
      "Bash(server/storage.ts)",
      "Bash(client/src/components/effectiveness-card.tsx )",
      "Bash(client/src/components/effectiveness-ai-insights.tsx )",
      "Bash(client/src/components/charts/effectiveness-radar-chart.tsx )",
      "Bash(client/src/components/effectiveness-prompt-template-form.tsx )",
      "Bash(client/src/components/evidence-drawer.tsx )",
      "Bash(client/src/components/ui/drawer.tsx )",
      "Bash(server/routes/effectivenessRoutes.ts )",
      "Bash(server/services/effectiveness/types.ts )",
      "Bash(server/services/effectiveness/scorer.ts )",
      "Bash(server/storage.ts --transform='s|.*/||')"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "/tmp"
    ]
  }
}