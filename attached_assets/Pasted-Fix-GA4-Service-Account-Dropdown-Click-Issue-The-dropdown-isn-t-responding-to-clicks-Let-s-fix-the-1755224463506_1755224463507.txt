Fix GA4 Service Account Dropdown Click Issue

The dropdown isn't responding to clicks. Let's fix the select component in GA4IntegrationPanel.

**Step 1: Check if NativeSelect is the issue**

In `/client/src/components/admin/GA4IntegrationPanel.tsx`, replace the NativeSelect with a standard HTML select to test:

```typescript
// Replace the NativeSelect for service accounts with this:
<div>
  <Label htmlFor="ga4-service-account">Service Account</Label>
  <select
    id="ga4-service-account"
    name="serviceAccountId"
    value={selectedServiceAccountId || ""}
    onChange={(e) => {
      console.log('Service account selected:', e.target.value); // Debug log
      setSelectedServiceAccountId(e.target.value);
      onServiceAccountUpdate?.(e.target.value);
    }}
    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent"
    disabled={!serviceAccounts || serviceAccounts.length === 0}
  >
    <option value="">Select a service account</option>
    {serviceAccounts
      ?.filter(sa => sa.isActive)
      .map(sa => (
        <option key={sa.id} value={sa.id}>
          {sa.email} ({sa.projectId})
        </option>
      ))}
  </select>
  
  {(!serviceAccounts || serviceAccounts.length === 0) && (
    <p className="text-xs text-amber-600 mt-1">
      No service accounts available. Please add one in the GA4 Accounts tab.
    </p>
  )}
</div>
Step 2: Debug the service accounts data
Add debug logging to see if service accounts are being passed correctly:
typescriptexport function GA4IntegrationPanel({ 
  clientId, 
  currentGA4PropertyId, 
  serviceAccounts = [],
  onGA4PropertyUpdate,
  onServiceAccountUpdate 
}: GA4IntegrationPanelProps) {
  
  // Add debug logging
  console.log('GA4IntegrationPanel received:', {
    clientId,
    serviceAccountsCount: serviceAccounts?.length,
    serviceAccounts
  });
  
  const [selectedServiceAccountId, setSelectedServiceAccountId] = useState<string>("");
  const [ga4PropertyId, setGA4PropertyId] = useState(currentGA4PropertyId || "");
  
  // ... rest of component
}
Step 3: Check if state is being initialized correctly
Make sure the selected service account state is initialized properly:
typescript// If the client already has a service account, initialize with it
useEffect(() => {
  if (clientId) {
    // Fetch current property access to get the service account
    fetch(`/api/admin/ga4-property-access/client/${clientId}`)
      .then(res => res.json())
      .then(data => {
        if (data?.serviceAccountId) {
          console.log('Setting service account from existing data:', data.serviceAccountId);
          setSelectedServiceAccountId(data.serviceAccountId);
        }
      })
      .catch(err => console.error('Error fetching property access:', err));
  }
}, [clientId]);