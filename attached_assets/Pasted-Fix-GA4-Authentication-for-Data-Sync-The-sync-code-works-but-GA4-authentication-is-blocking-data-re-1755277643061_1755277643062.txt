Fix GA4 Authentication for Data Sync

The sync code works but GA4 authentication is blocking data retrieval. Let's fix the "No verified GA4 property access" issue.

**Step 1: Check and fix GA4 property access**

Add this endpoint to verify GA4 setup for a client:

```typescript
// In /server/routes.ts - Debug GA4 setup
app.get('/api/debug/ga4-setup/:clientId', requireAuth, async (req, res) => {
  try {
    const { clientId } = req.params;
    
    // Get client
    const client = await storage.getClient(clientId);
    
    // Get property access
    const propertyAccess = await storage.getGA4PropertyAccessByClient(clientId);
    
    // Get service account if configured
    let serviceAccount = null;
    if (propertyAccess?.serviceAccountId) {
      serviceAccount = await storage.getGA4ServiceAccount(propertyAccess.serviceAccountId);
    }
    
    // Test GA4 connection
    let connectionTest = { success: false, error: null };
    if (propertyAccess && serviceAccount) {
      try {
        const { testGA4Connection } = await import('./services/ga4/ga4Auth');
        connectionTest = await testGA4Connection(
          propertyAccess.propertyId,
          serviceAccount
        );
      } catch (error) {
        connectionTest = { success: false, error: error.message };
      }
    }
    
    res.json({
      client: {
        id: client?.id,
        name: client?.name,
        ga4PropertyId: client?.ga4PropertyId
      },
      propertyAccess: propertyAccess ? {
        propertyId: propertyAccess.propertyId,
        serviceAccountId: propertyAccess.serviceAccountId,
        createdAt: propertyAccess.createdAt
      } : null,
      serviceAccount: serviceAccount ? {
        id: serviceAccount.id,
        email: serviceAccount.email,
        isActive: serviceAccount.isActive,
        hasCredentials: !!serviceAccount.credentials
      } : null,
      connectionTest,
      setupComplete: !!(propertyAccess && serviceAccount && serviceAccount.isActive)
    });
    
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});
Step 2: Create or fix GA4 property access record
If property access is missing, create it:
typescript// Fix GA4 property access - add this temporary endpoint
app.post('/api/fix-ga4-access/:clientId', requireAuth, async (req, res) => {
  try {
    const { clientId } = req.params;
    
    // Get client
    const client = await storage.getClient(clientId);
    if (!client || !client.ga4PropertyId) {
      throw new Error('Client has no GA4 property configured');
    }
    
    // Get first active service account
    const serviceAccounts = await storage.getGA4ServiceAccounts();
    const activeAccount = serviceAccounts.find(sa => sa.isActive);
    
    if (!activeAccount) {
      throw new Error('No active service account found');
    }
    
    // Create or update property access
    const propertyAccess = await storage.createGA4PropertyAccess({
      clientId: clientId,
      propertyId: client.ga4PropertyId,
      serviceAccountId: activeAccount.id
    });
    
    res.json({
      success: true,
      message: 'GA4 property access created/updated',
      propertyAccess
    });
    
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});
Step 3: Test and fix for each client
Run these commands to diagnose and fix:
bash# Check Demo Company GA4 setup
curl http://localhost:5000/api/debug/ga4-setup/demo-client-id -b /tmp/cookies.txt

# Fix Demo Company GA4 access if needed
curl -X POST http://localhost:5000/api/fix-ga4-access/demo-client-id -b /tmp/cookies.txt

# Check Estimatic GA4 setup  
curl http://localhost:5000/api/debug/ga4-setup/[estimatic-client-id] -b /tmp/cookies.txt

# Fix Estimatic GA4 access if needed
curl -X POST http://localhost:5000/api/fix-ga4-access/[estimatic-client-id] -b /tmp/cookies.txt
Step 4: Update GA4DataManager to handle property access correctly
In /server/services/ga4/GA4DataManager.ts, ensure it's using property access:
typescriptexport async function executeCompleteGA4DataSync(clientId: string) {
  console.log(`[GA4DataManager] Starting sync for client: ${clientId}`);
  
  // Get property access (not just client.ga4PropertyId)
  const propertyAccess = await storage.getGA4PropertyAccessByClient(clientId);
  
  if (!propertyAccess || !propertyAccess.propertyId) {
    console.error('[GA4DataManager] No property access found for client');
    throw new Error('GA4 property access not configured');
  }
  
  // Get service account
  const serviceAccount = await storage.getGA4ServiceAccount(propertyAccess.serviceAccountId);
  
  if (!serviceAccount || !serviceAccount.isActive) {
    console.error('[GA4DataManager] No active service account found');
    throw new Error('Service account not active or not found');
  }
  
  console.log(`[GA4DataManager] Using property ${propertyAccess.propertyId} with service account ${serviceAccount.email}`);
  
  // Now sync with proper credentials
  const ga4Service = new GA4IntegrationService(storage);
  const result = await ga4Service.fetchGA4Data(
    clientId,
    propertyAccess.propertyId,
    serviceAccount
  );
  
  return result;
}