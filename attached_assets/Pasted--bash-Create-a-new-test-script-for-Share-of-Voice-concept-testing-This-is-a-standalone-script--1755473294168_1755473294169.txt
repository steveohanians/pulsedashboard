```bash
# Create a new test script for Share of Voice concept testing
# This is a standalone script that won't affect your existing application
# Location: scripts/test-sov-concept.mjs

# First, create the file:
touch scripts/test-sov-concept.mjs

# Then add this code to test OpenAI brand understanding
# This script:
# - Uses your existing OPENAI_API_KEY from .env
# - Doesn't touch any database or existing code
# - Tests if AI can understand what brands actually do
# - Costs approximately $0.001 per run
```

```javascript
// scripts/test-sov-concept.mjs
import OpenAI from 'openai';
import dotenv from 'dotenv';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

// Load environment variables
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);
dotenv.config({ path: join(__dirname, '../.env') });

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY
});

async function testBrandUnderstanding() {
  console.log('üß™ Testing SoV Concept - Brand Understanding\n');
  
  // Test data - you can change this to your actual use case
  const testInput = {
    brand: { name: "Notion", url: "notion.so" },
    competitors: [
      { name: "Obsidian", url: "obsidian.md" },
      { name: "Roam Research", url: "roamresearch.com" }
    ],
    vertical: "Knowledge Management" // Still too vague!
  };

  try {
    console.log('üìä Input brands:', testInput.brand.name, 'vs', testInput.competitors.map(c => c.name).join(', '));
    console.log('\nüîç Step 1: Understanding what these brands actually do...\n');

    // First, understand the brands
    const brandContext = await openai.chat.completions.create({
      model: 'gpt-3.5-turbo',
      messages: [{
        role: 'user',
        content: `Research these brands and provide a brief summary of what each does:
        - ${testInput.brand.name} (${testInput.brand.url})
        - ${testInput.competitors.map(c => `${c.name} (${c.url})`).join('\n- ')}
        
        Format: Brief 1-2 sentence description for each.`
      }],
      temperature: 0.3
    });

    console.log('Brand Understanding:', brandContext.choices[0].message.content);
    console.log('\n‚úÖ OpenAI connection working!');
    console.log('‚úÖ Can research brands!');
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
    if (error.message.includes('API key')) {
      console.error('Check your OPENAI_API_KEY in .env file');
    }
  }
}

// Run the test
testBrandUnderstanding();
```

```bash
# To run the test:
node scripts/test-sov-concept.mjs

# Expected output:
# - Should show brand understanding for Notion, Obsidian, and Roam Research
# - Confirms OpenAI API is working
# - No database changes, completely isolated test
```