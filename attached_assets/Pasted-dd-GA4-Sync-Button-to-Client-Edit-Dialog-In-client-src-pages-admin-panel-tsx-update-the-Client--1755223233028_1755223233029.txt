dd GA4 Sync Button to Client Edit Dialog

In `/client/src/pages/admin-panel.tsx`, update the Client Edit Dialog to add a manual GA4 sync button after the GA4 property is configured.

**Step 1: Find the Client Edit Dialog (around line 1930-2000)**

Look for the dialog content where `editingItem?.type === 'client'` and locate the GA4IntegrationPanel section.

**Step 2: Add the GA4 Sync Button after GA4IntegrationPanel**

Add this code right after the GA4IntegrationPanel component (around line 1970):

```typescript
{/* GA4 Data Sync Button - Only show if client has GA4 property configured */}
{editingItem?.id && editingItem?.ga4PropertyId && /^\d+$/.test(editingItem.ga4PropertyId) && (
  <div className="space-y-3 border-t pt-4">
    <Label>GA4 Data Synchronization</Label>
    <div className="flex items-center justify-between p-3 bg-blue-50 rounded-lg border border-blue-200">
      <div className="flex-1">
        <p className="text-sm font-medium text-blue-900">Manual Data Sync</p>
        <p className="text-xs text-blue-700 mt-1">
          Fetch the latest 15 months of GA4 data for this client
        </p>
      </div>
      <Button
        type="button"
        variant="outline"
        size="sm"
        onClick={async () => {
          try {
            setIsLoading(true);
            toast({
              title: "Starting GA4 sync...",
              description: "This may take 30-60 seconds",
              duration: 5000,
            });
            
            // Call the GA4 sync endpoint
            await clientService.triggerGA4Sync(editingItem.id);
            
            toast({
              title: "GA4 Sync Complete",
              description: "Successfully synced GA4 data",
              duration: 5000,
            });
            
            // Refresh the clients list to show updated data
            queryClient.invalidateQueries({ queryKey: AdminQueryKeys.clients() });
          } catch (error) {
            toast({
              title: "GA4 Sync Failed",
              description: error instanceof Error ? error.message : "Failed to sync GA4 data",
              variant: "destructive",
              duration: 5000,
            });
          } finally {
            setIsLoading(false);
          }
        }}
        disabled={isLoading}
        className="bg-blue-600 text-white hover:bg-blue-700"
      >
        {isLoading ? (
          <>
            <Loader2 className="h-4 w-4 mr-2 animate-spin" />
            Syncing...
          </>
        ) : (
          <>
            <RefreshCw className="h-4 w-4 mr-2" />
            Sync GA4 Data
          </>
        )}
      </Button>
    </div>
  </div>
)}
Step 3: Update the clientService to include triggerGA4Sync method
In /client/src/services/api/client.service.ts, ensure this method exists:
typescriptasync triggerGA4Sync(clientId: string): Promise<void> {
  eventBus.emit('ga4.sync.started', { clientId });
  
  try {
    // Call the complete GA4 data sync endpoint
    const result = await this.request('POST', `/admin/ga4/complete-data-sync/${clientId}`);
    eventBus.emit('ga4.sync.completed', { clientId, result });
  } catch (error) {
    eventBus.emit('ga4.sync.failed', { clientId, error });
    throw error;
  }
}
This adds a manual sync button that only appears when:

Editing an existing client (has ID)
GA4 property is configured and valid