```markdown
### Update Client Data Check Dialog Table Columns

Replace the bounce rate and session duration columns with "Latest Data Period" and "Last GA4 Sync" columns.

**Step 1: Update the backend endpoint to include this information**

In `/server/routes.ts`, find or add the `/api/debug/verify-client-isolation` endpoint and update it:

```typescript
app.get('/api/debug/verify-client-isolation', requireAuth, async (req, res) => {
  try {
    const period = 'Last Month';
    
    // Get all clients
    const clients = await storage.getClients();
    
    const results = await Promise.all(clients.map(async (client) => {
      const metrics = await storage.getMetricsByClient(client.id, period);
      const clientMetrics = metrics.filter(m => m.sourceType === 'Client' && m.clientId === client.id);
      
      // Get the most recent period with data
      let latestDataPeriod = null;
      try {
        const allPeriods = await db
          .selectDistinct({ timePeriod: metrics.timePeriod })
          .from(metrics)
          .where(and(
            eq(metrics.clientId, client.id),
            eq(metrics.sourceType, 'Client')
          ))
          .orderBy(desc(metrics.timePeriod));
        
        if (allPeriods.length > 0) {
          // Take the most recent period
          latestDataPeriod = allPeriods[0].timePeriod;
        }
      } catch (e) {
        console.error('Error getting latest period:', e);
      }
      
      return {
        clientId: client.id,
        clientName: client.name,
        ga4PropertyId: client.ga4PropertyId,
        latestDataPeriod: latestDataPeriod,
        lastGA4Sync: client.lastGA4Sync,
        metricsCount: {
          total: metrics.length,
          clientSpecific: clientMetrics.length,
        },
        hasCorrectClientId: clientMetrics.every(m => m.clientId === client.id),
      };
    }));
    
    res.json({
      period,
      clientCount: clients.length,
      results,
      isolation: results.every(r => r.hasCorrectClientId) ? 'VERIFIED ✅' : 'FAILED ❌'
    });
    
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});
```

**Step 2: Update the dialog table in admin-panel.tsx**

In `/client/src/pages/admin-panel.tsx`, find the Client Data Check Results Dialog table (in the code you just added) and replace the table headers and body:

```typescript
{/* Client Data Table */}
<div className="border rounded-lg overflow-hidden">
  <table className="w-full">
    <thead className="bg-gray-50 border-b">
      <tr>
        <th className="text-left px-4 py-3 text-sm font-semibold">Client Name</th>
        <th className="text-left px-4 py-3 text-sm font-semibold">GA4 Property</th>
        <th className="text-center px-4 py-3 text-sm font-semibold">Total Metrics</th>
        <th className="text-center px-4 py-3 text-sm font-semibold">Latest Data Period</th>
        <th className="text-center px-4 py-3 text-sm font-semibold">Last GA4 Sync</th>
        <th className="text-center px-4 py-3 text-sm font-semibold">Isolation</th>
      </tr>
    </thead>
    <tbody className="divide-y">
      {dataCheckResults.results.map((client: any, index: number) => (
        <tr key={client.clientId} className={index % 2 === 0 ? 'bg-white' : 'bg-gray-50'}>
          <td className="px-4 py-3">
            <div>
              <div className="font-medium">{client.clientName}</div>
              <div className="text-xs text-gray-500 font-mono">{client.clientId}</div>
            </div>
          </td>
          <td className="px-4 py-3">
            {client.ga4PropertyId ? (
              <span className="text-sm font-mono bg-blue-100 px-2 py-1 rounded">
                {client.ga4PropertyId}
              </span>
            ) : (
              <span className="text-sm text-gray-400">Not configured</span>
            )}
          </td>
          <td className="px-4 py-3 text-center">
            <span className={`font-semibold ${
              client.metricsCount.clientSpecific > 0 ? 'text-green-600' : 'text-gray-400'
            }`}>
              {client.metricsCount.clientSpecific}
            </span>
          </td>
          <td className="px-4 py-3 text-center">
            {client.latestDataPeriod ? (
              <span className="text-sm font-medium">
                {(() => {
                  // Parse the period to show as Month Year
                  if (client.latestDataPeriod === 'Last Month') {
                    return 'Last Month';
                  } else if (client.latestDataPeriod.includes('-')) {
                    // Format like "2025-07" to "July 2025"
                    const [year, month] = client.latestDataPeriod.split('-');
                    const date = new Date(parseInt(year), parseInt(month) - 1);
                    return date.toLocaleDateString('en-US', { month: 'long', year: 'numeric' });
                  }
                  return client.latestDataPeriod;
                })()}
              </span>
            ) : (
              <span className="text-sm text-gray-400">No data</span>
            )}
          </td>
          <td className="px-4 py-3 text-center">
            {client.lastGA4Sync ? (
              <span className="text-sm">
                {new Date(client.lastGA4Sync).toLocaleDateString('en-US', {
                  month: 'short',
                  day: 'numeric',
                  year: 'numeric',
                  hour: '2-digit',
                  minute: '2-digit'
                })}
              </span>
            ) : (
              <span className="text-sm text-gray-400">Never</span>
            )}
          </td>
          <td className="px-4 py-3 text-center">
            {client.hasCorrectClientId ? (
              <CheckCircle className="h-5 w-5 text-green-500 mx-auto" />
            ) : (
              <XCircle className="h-5 w-5 text-red-500 mx-auto" />
            )}
          </td>
        </tr>
      ))}
    </tbody>
  </table>
</div>
```

This updated implementation will:
1. Show "Latest Data Period" column - displays the most recent month/year that has data for each client
2. Show "Last GA4 Sync" column - displays when the GA4 sync was last run, formatted as "Nov 15, 2024, 02:30 PM" or "Never"
3. Properly format periods like "2025-07" as "July 2025" for better readability
4. Show "No data" or "Never" when appropriate

The table now gives you a better overview of data freshness and sync status for each client.
```