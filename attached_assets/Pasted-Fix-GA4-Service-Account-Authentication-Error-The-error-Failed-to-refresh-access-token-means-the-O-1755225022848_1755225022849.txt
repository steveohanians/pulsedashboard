Fix GA4 Service Account Authentication Error

The error "Failed to refresh access token" means the OAuth token for the service account has expired and needs re-authentication.

**Step 1: Add Re-authentication Button in GA4 Accounts Tab**

In `/client/src/components/admin/ServiceAccountsTable.tsx`, make sure there's a re-authenticate button for each service account:

```typescript
// In the actions column of the table, add:
<Button
  variant="outline"
  size="sm"
  onClick={async () => {
    try {
      // Get OAuth URL for re-authentication
      const response = await fetch(`/api/oauth/google/authorize/${account.id}`);
      const data = await response.json();
      
      if (data.authUrl) {
        // Open OAuth flow in new window
        window.open(data.authUrl, '_blank', 'width=600,height=600');
        
        toast({
          title: "Authentication Required",
          description: "Complete the Google authorization in the new window",
        });
      }
    } catch (error) {
      toast({
        title: "Failed to start authentication",
        description: error.message,
        variant: "destructive"
      });
    }
  }}
>
  Re-authenticate
</Button>
Step 2: Handle OAuth Callback
Make sure the OAuth callback route properly updates the tokens. In /server/routes/googleOAuthRoutes.ts or /server/services/googleOAuthService.ts:
typescript// In the OAuth callback handler
app.get('/api/oauth/google/callback', async (req, res) => {
  try {
    const { code, state } = req.query;
    
    // Exchange code for tokens
    const oauth2Client = new google.auth.OAuth2(
      process.env.GOOGLE_CLIENT_ID,
      process.env.GOOGLE_CLIENT_SECRET,
      `${process.env.APP_URL}/api/oauth/google/callback`
    );
    
    const { tokens } = await oauth2Client.getToken(code as string);
    
    // Update service account with new tokens
    await storage.updateGA4ServiceAccount(state as string, {
      accessToken: tokens.access_token,
      refreshToken: tokens.refresh_token,
      tokenExpiry: new Date(tokens.expiry_date || Date.now() + 3600000),
    });
    
    // Close the OAuth window and show success
    res.send(`
      <html>
        <body>
          <script>
            window.opener.postMessage({ type: 'oauth-success' }, '*');
            window.close();
          </script>
          <p>Authentication successful! You can close this window.</p>
        </body>
      </html>
    `);
  } catch (error) {
    res.status(500).send('Authentication failed: ' + error.message);
  }
});