Here's a comprehensive prompt to fix brand story extraction universally:

## Prompt for Replit to Fix Brand Story Extraction:

"The brand story extraction is mixing unrelated content types. Fix it to extract actual narrative and company story elements, not random service descriptions. Requirements:

### 1. Identify Brand Story Sections First
```javascript
// Look for sections that actually contain story/narrative
const storySelectors = [
  // Explicit story sections
  '[class*="about"]',
  '[class*="story"]',
  '[class*="history"]',
  '[class*="mission"]',
  '[class*="vision"]',
  '[class*="values"]',
  '[class*="founder"]',
  '[class*="journey"]',
  
  // Common story locations
  '#about',
  '.company-info',
  'section:has(h2:contains("who we are"))',
  'section:has(h2:contains("our story"))',
  'section:has(h2:contains("about"))'
];

let storySection = null;
for (const selector of storySelectors) {
  const section = $(selector).first();
  if (section.length && section.text().length > 100) {
    storySection = section;
    break;
  }
}
```

### 2. Look for Narrative Patterns
```javascript
// Patterns that indicate actual story content
const narrativePatterns = [
  // Origin stories
  /founded|began|started|established|since \d{4}/i,
  /journey|evolution|grew|transformed/i,
  
  // Mission/purpose
  /our mission|we believe|we exist|our purpose/i,
  /dedicated to|committed to|passionate about/i,
  
  // Values/philosophy  
  /our approach|our philosophy|we value|our values/i,
  /principles|core belief|culture/i,
  
  // Differentiators (but not features)
  /what sets us apart|what makes us different|why choose/i,
  /unlike others|we're not just|more than just/i
];

// Extract paragraphs matching these patterns
const storyParagraphs = [];
$('p, h2, h3').each((_, el) => {
  const text = $(el).text().trim();
  if (narrativePatterns.some(pattern => pattern.test(text)) &&
      text.length > 30 && text.length < 500) {
    storyParagraphs.push(text);
  }
});
```

### 3. Separate Story from Services
```javascript
// Filter OUT service/feature descriptions
const nonStoryPatterns = [
  /services include|we offer|our solutions/i,
  /features:|benefits:|includes:/i,
  /pricing|packages|plans/i,
  /click here|learn more|get started/i,
  /step 1|step 2|how it works/i
];

const filteredStory = storyParagraphs.filter(text => 
  !nonStoryPatterns.some(pattern => pattern.test(text))
);
```

### 4. Extract Company Credentials
```javascript
// Look for credibility markers that are part of the story
const credentialPatterns = [
  /(\d+)\+?\s*years/i,  // "20+ years"
  /since (\d{4})/i,      // "since 2003"
  /(\d+)\+?\s*clients/i, // "500+ clients"
  /award[- ]winning/i,
  /recognized|certified|accredited/i,
  /trusted by/i
];

const credentials = [];
$('p, li, h3, h4').each((_, el) => {
  const text = $(el).text().trim();
  if (credentialPatterns.some(pattern => pattern.test(text)) &&
      text.length < 150) {
    credentials.push(text);
  }
});
```

### 5. Exclude Testimonials
```javascript
// Don't include client quotes as part of company story
const isTestimonial = (text) => {
  // Check for quote marks or attribution
  return text.match(/[""].*[""]/) ||
         text.match(/\- .+, (CEO|President|Director|Manager)/i) ||
         $(el).closest('.testimonial, [class*="testimonial"], blockquote').length > 0;
};

// Filter out testimonials
storyContent = storyContent.filter(text => !isTestimonial(text));
```

### 6. Look for Team/Culture Content
```javascript
// Team and culture are part of brand story
const teamCultureSelectors = [
  '[class*="team"]',
  '[class*="culture"]',
  '[class*="people"]',
  'section:has(h2:contains("our team"))',
  'section:has(h2:contains("culture"))'
];

teamCultureSelectors.forEach(selector => {
  const section = $(selector).first();
  if (section.length) {
    const text = section.find('p').slice(0, 2).text().trim();
    if (text.length > 50 && text.length < 500) {
      storyContent.push(text);
    }
  }
});
```

### 7. Construct Coherent Narrative
```javascript
// Organize content by story type
const storyElements = {
  origin: [],      // Founded, history
  mission: [],     // Why we exist
  approach: [],    // How we work
  values: [],      // What we believe
  impact: [],      // Results, difference we make
  credentials: []  // Years, clients, awards
};

// Categorize extracted content
filteredStory.forEach(text => {
  if (/founded|began|started|since \d{4}/i.test(text)) {
    storyElements.origin.push(text);
  } else if (/mission|purpose|exist|believe/i.test(text)) {
    storyElements.mission.push(text);
  } else if (/approach|how we|process|method/i.test(text)) {
    storyElements.approach.push(text);
  } else if (/value|principle|culture|philosophy/i.test(text)) {
    storyElements.values.push(text);
  } else if (/result|impact|achieve|deliver/i.test(text)) {
    storyElements.impact.push(text);
  }
});

// Add credentials
storyElements.credentials = credentials;

// Build narrative in logical order
const narrative = [
  ...storyElements.origin,
  ...storyElements.mission,
  ...storyElements.values,
  ...storyElements.approach,
  ...storyElements.impact,
  ...storyElements.credentials
].filter(text => text && text.length > 20);

// Remove duplicates while preserving order
const uniqueNarrative = [...new Set(narrative)];

storyContent = uniqueNarrative.join(' ').substring(0, 2500);
```

### 8. Fallback for Minimal Sites
```javascript
// If no explicit story section, build from context
if (storyContent.length < 200) {
  // Look for "why us" or differentiator content
  const differentiators = [];
  
  $('h2, h3, h4').each((_, el) => {
    const heading = $(el).text().trim();
    if (heading.match(/why|different|unique|about us/i)) {
      // Get content after this heading
      const content = $(el).nextUntil('h2, h3').text().trim();
      if (content.length > 50) {
        differentiators.push(content.substring(0, 300));
      }
    }
  });
  
  // Look for meta description as last resort
  const metaDesc = $('meta[name="description"]').attr('content') || '';
  
  storyContent = [...differentiators, metaDesc].join(' ').substring(0, 2500);
}
```

This approach extracts actual brand narrative by identifying story sections, looking for narrative patterns, excluding non-story content like services and testimonials, and organizing content into a coherent narrative structure."