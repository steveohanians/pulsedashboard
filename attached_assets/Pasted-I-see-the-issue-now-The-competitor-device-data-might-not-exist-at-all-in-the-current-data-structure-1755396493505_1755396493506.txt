I see the issue now. The competitor device data might not exist at all in the current data structure. Let me check what's actually coming from the backend by looking at the API response structure.

# Step 8: Investigate What Data Actually Exists

**INSTRUCTION FOR REPLIT:**
Let's check what device distribution data is actually coming from the backend API. The issue might be that the backend isn't sending competitor device data at all.

**CREATE A TEMPORARY DEBUG FILE `/client/src/utils/debugDeviceData.ts`:**

```typescript
/**
 * Temporary debug utility to understand device distribution data structure
 * This will help us see what data actually exists
 */

export function debugDeviceDistribution(dashboardData: any) {
  console.log("=== DEVICE DISTRIBUTION DEBUG ===");
  
  // Check what's in metrics
  const deviceMetrics = dashboardData?.metrics?.filter((m: any) => 
    m.metricName === "Device Distribution"
  ) || [];
  
  console.log("1. Device Distribution Metrics Count:", deviceMetrics.length);
  console.log("2. Unique Source Types:", 
    Array.from(new Set(deviceMetrics.map((m: any) => m.sourceType)))
  );
  
  // Group by source type
  const bySourceType: any = {};
  deviceMetrics.forEach((m: any) => {
    const key = m.sourceType;
    if (!bySourceType[key]) bySourceType[key] = [];
    bySourceType[key].push({
      value: m.value,
      channel: m.channel,
      competitorId: m.competitorId,
      timePeriod: m.timePeriod
    });
  });
  
  console.log("3. Metrics by Source Type:", bySourceType);
  
  // Check averagedMetrics
  if (dashboardData?.averagedMetrics) {
    console.log("4. AveragedMetrics Keys:", Object.keys(dashboardData.averagedMetrics));
    if (dashboardData.averagedMetrics["Device Distribution"]) {
      console.log("5. Device Distribution in AveragedMetrics:", 
        dashboardData.averagedMetrics["Device Distribution"]
      );
    }
  }
  
  // Check competitors
  console.log("6. Competitors:", dashboardData?.competitors?.map((c: any) => ({
    id: c.id,
    domain: c.domain
  })));
  
  // Look for ANY metric with competitor data
  const competitorMetrics = dashboardData?.metrics?.filter((m: any) => 
    m.sourceType === "Competitor" && m.competitorId
  ) || [];
  
  console.log("7. Total Competitor Metrics (all types):", competitorMetrics.length);
  console.log("8. Competitor Metric Names:", 
    Array.from(new Set(competitorMetrics.map((m: any) => m.metricName)))
  );
  
  console.log("=== END DEBUG ===");
}
```

**THEN MODIFY `/client/src/hooks/useDashboardData.ts` TO USE THIS DEBUG:**

**ADD AT THE TOP:**
```typescript
import { debugDeviceDistribution } from '@/utils/debugDeviceData';
```

**THEN IN THE `dashboardQuery` SUCCESS, ADD DEBUGGING (around line 60):**
```typescript
    queryFn: async () => {
      try {
        const result = await apiRequest(
          'GET',
          `/api/dashboard/${user?.clientId}?timePeriod=${encodeURIComponent(effectiveTimePeriod)}&businessSize=${encodeURIComponent(businessSize)}&industryVertical=${encodeURIComponent(industryVertical)}`
        );
        
        // TEMPORARY DEBUG - Remove after investigation
        if (typeof window !== 'undefined' && window.location.hostname === 'localhost') {
          debugDeviceDistribution(result);
        }
        
        return result;
      } catch (error) {
```

**After adding this debug code:**
1. Open the browser console (F12)
2. Refresh the dashboard
3. Look for "=== DEVICE DISTRIBUTION DEBUG ===" in the console
4. **Tell me what you see for:**
   - How many Device Distribution metrics exist?
   - What source types are present?
   - Are there ANY metrics with sourceType "Competitor"?
   - What competitor metric names exist (if any)?

This will tell us definitively whether competitor device data exists in the backend response or not.