Here's a comprehensive prompt to universally fix the positioning extraction logic:

## Prompt for Replit to Fix Positioning Extraction:

"The positioning extraction is missing 70% of critical content. Fix the logic to capture complete brand positioning from modern websites. Requirements:

### 1. Expand Hero Section Detection
```javascript
// Current selectors miss BEM and modern naming
const heroSelectors = [
  // Add flexible patterns
  '[class*="hero"]',  // Catches hero, hero__, hero--
  '[class*="banner"]',
  '[class*="masthead"]',
  'section:first-child',
  'main > section:first-child',
  '.intro, [class*="intro"]',
  'header + section',  // First section after header
  '[data-section="hero"]'
];
```

### 2. Extract ALL Heading Levels
```javascript
// Don't skip H4, H5, H6 - many sites use these for subtitles
const headings = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];
let extractedHeadings = {};

headings.forEach(tag => {
  $(tag).slice(0, 3).each((_, el) => {
    const text = $(el).text().trim();
    // Skip navigation/footer
    if (!$(el).closest('nav, footer').length && text.length > 3) {
      if (!extractedHeadings[tag]) extractedHeadings[tag] = [];
      extractedHeadings[tag].push(text);
    }
  });
});

// Use H5/H6 if they appear before H1 (common pattern for eyebrow text)
const eyebrowText = extractedHeadings.h5?.[0] || extractedHeadings.h6?.[0] || '';
const mainHeadline = extractedHeadings.h1?.[0] || '';
const subheading = extractedHeadings.h2?.[0] || extractedHeadings.h3?.[0] || '';
```

### 3. Find Value Proposition Sections
```javascript
// Look beyond hero for complete positioning
const valuePropSelectors = [
  '.intro, [class*="intro"]',
  '[class*="value"]',
  '[class*="about"]',
  'section:nth-child(2)',  // Second section often has value props
  'section:nth-child(3)',
  '[class*="features"]',
  '[class*="benefits"]',
  '[class*="services"]'
];

let valuePropContent = [];
valuePropSelectors.forEach(selector => {
  const section = $(selector).first();
  if (section.length && !section.closest('footer').length) {
    // Get all text content from this section
    section.find('h2, h3, h4, h5, p').slice(0, 8).each((_, el) => {
      const text = $(el).text().trim();
      if (text.length > 10 && text.length < 300) {
        valuePropContent.push(text);
      }
    });
  }
});
```

### 4. Extract Differentiators and Proof Points
```javascript
// Look for patterns indicating differentiation
const differentiatorPatterns = [
  /\d+\s*(year|client|project|company|brand)/i,  // "20+ years", "500+ clients"
  /award[- ]winning/i,
  /trusted by/i,
  /recognized/i,
  /leading|leader/i,
  /expert|expertise/i,
  /proven/i,
  /results/i
];

// Find elements containing these patterns
$('p, h2, h3, h4, h5, li').each((_, el) => {
  const text = $(el).text().trim();
  if (differentiatorPatterns.some(pattern => pattern.test(text)) && 
      text.length > 10 && text.length < 200) {
    additionalContent.push(text);
  }
});
```

### 5. Get List-Based Value Props
```javascript
// Many sites present positioning as bullet points
$('ul, ol').each((_, list) => {
  const $list = $(list);
  // Skip navigation
  if ($list.closest('nav, header, footer').length) return;
  
  const items = $list.find('li').slice(0, 6);
  const listItems = [];
  
  items.each((_, li) => {
    const text = $(li).text().trim();
    // Look for value prop patterns
    if (text.match(/approach|performance|excellence|collaborative|expertise|solution/i) &&
        text.length > 15 && text.length < 150) {
      listItems.push(text);
    }
  });
  
  if (listItems.length >= 2) {
    additionalContent.push(...listItems);
  }
});
```

### 6. Smart Content Assembly
```javascript
// Build comprehensive positioning content
const contentParts = [];

// 1. Eyebrow/intro text (if exists)
if (eyebrowText && eyebrowText !== mainHeadline) {
  contentParts.push(eyebrowText);
}

// 2. Main headline
if (mainHeadline) {
  contentParts.push(mainHeadline);
}

// 3. Subheading (if different from main)
if (subheading && subheading !== mainHeadline) {
  contentParts.push(subheading);
}

// 4. Value prop content
contentParts.push(...valuePropContent);

// 5. Additional differentiators
contentParts.push(...additionalContent);

// Remove duplicates and clean
const uniqueParts = [...new Set(contentParts)]
  .filter(text => text && text.length > 5)
  .map(text => text.replace(/\s+/g, ' ').trim());

// If content is thin, expand search
if (uniqueParts.join(' ').length < 300) {
  // Get first 3 sections of content
  $('section').slice(0, 3).each((_, section) => {
    $(section).find('h2, h3, p').slice(0, 3).each((_, el) => {
      const text = $(el).text().trim();
      if (text.length > 20 && text.length < 200 &&
          !text.match(/cookie|privacy|copyright/i)) {
        uniqueParts.push(text);
      }
    });
  });
}

const heroContent = uniqueParts
  .filter((text, index, self) => self.indexOf(text) === index)
  .join(' ')
  .substring(0, 1500);
```

### 7. Fallback Enhancement
```javascript
// If still missing content, use proximity-based extraction
if (heroContent.length < 200) {
  const mainElement = $('main, [role="main"]').first();
  if (mainElement.length) {
    // Get everything from top of main content
    const topContent = [];
    mainElement.children().slice(0, 3).each((_, child) => {
      $(child).find('h1, h2, h3, h4, h5, p').slice(0, 5).each((_, el) => {
        const text = $(el).text().trim();
        if (text.length > 10 && !$(el).closest('nav').length) {
          topContent.push(text);
        }
      });
    });
    
    heroContent = topContent.join(' ').substring(0, 1500);
  }
}
```

This will capture complete positioning by looking at all heading levels, extracting from multiple sections, finding differentiators and proof points, and assembling content intelligently."