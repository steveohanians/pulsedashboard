Great catch! You're absolutely right - let's use GPT-4o to match your existing app. GPT-4o is faster and more capable anyway.

```bash
# Update the test script to use GPT-4o instead of GPT-3.5-turbo
# This will match your existing application's AI model
# GPT-4o is actually faster and better at understanding nuanced brand differences
```

```javascript
// scripts/test-sov-concept.mjs
import OpenAI from 'openai';
import dotenv from 'dotenv';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

// Load environment variables
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);
dotenv.config({ path: join(__dirname, '../.env') });

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY
});

async function testBrandUnderstanding() {
  console.log('üß™ Testing SoV Concept - Brand Understanding + Question Generation\n');
  
  // Test data - you can change this to your actual use case
  const testInput = {
    brand: { name: "Notion", url: "notion.so" },
    competitors: [
      { name: "Obsidian", url: "obsidian.md" },
      { name: "Roam Research", url: "roamresearch.com" }
    ],
    vertical: "Knowledge Management"
  };

  try {
    console.log('üìä Input brands:', testInput.brand.name, 'vs', testInput.competitors.map(c => c.name).join(', '));
    console.log('\nüîç Step 1: Understanding what these brands actually do...\n');

    // First, understand the brands - using GPT-4o like the rest of your app
    const brandContext = await openai.chat.completions.create({
      model: 'gpt-4o',  // Changed to GPT-4o to match your app
      messages: [{
        role: 'user',
        content: `Research these brands and provide a brief summary of what each does:
        - ${testInput.brand.name} (${testInput.brand.url})
        - ${testInput.competitors.map(c => `${c.name} (${c.url})`).join('\n- ')}
        
        Format: Brief 1-2 sentence description for each.`
      }],
      temperature: 0.3
    });

    const brandUnderstanding = brandContext.choices[0].message.content;
    console.log('Brand Understanding:', brandUnderstanding);
    
    console.log('\nüéØ Step 2: Generating intelligent, non-branded questions...\n');

    // Now generate questions based on the actual brand understanding
    const questionGeneration = await openai.chat.completions.create({
      model: 'gpt-4o',  // Changed to GPT-4o to match your app
      messages: [{
        role: 'system',
        content: 'You are an expert at creating vendor-neutral questions that potential buyers would ask when researching solutions.'
      }, {
        role: 'user',
        content: `Based on these competing brands and what they do:
${brandUnderstanding}

Generate 15 non-branded, vendor-neutral questions that someone evaluating these types of tools would search for.

Requirements:
- NO brand names in questions
- Questions a real buyer would ask about these SPECIFIC capabilities
- Mix of question types:
  * 5 Awareness stage (understanding the problem/solution)
  * 5 Consideration stage (comparing approaches)
  * 5 Decision stage (implementation specifics)
- Use varied formats: "how to", "best", "what is", "which", comparisons

Output as a numbered list with stage labels:
1. [Awareness] Question here
2. [Awareness] Question here
etc.`
      }],
      temperature: 0.7
    });

    console.log('Generated Questions:\n');
    console.log(questionGeneration.choices[0].message.content);
    
    console.log('\n‚úÖ Brand understanding works with GPT-4o!');
    console.log('‚úÖ Intelligent question generation works!');
    console.log('‚úÖ Questions are specific to the actual product capabilities!');
    
    // Show token usage for cost estimation
    const totalTokens = brandContext.usage.total_tokens + questionGeneration.usage.total_tokens;
    console.log(`\nüí∞ Tokens used: ${totalTokens} (~$${(totalTokens * 0.005 / 1000).toFixed(4)})`);
    console.log('(Note: GPT-4o pricing is $5/1M tokens)');
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
    if (error.message.includes('API key')) {
      console.error('Check your OPENAI_API_KEY in .env file');
    }
  }
}

// Run the test
testBrandUnderstanding();
```

```bash
# Run with GPT-4o:
node scripts/test-sov-concept.mjs

# GPT-4o advantages:
# - Faster response times than GPT-4
# - Better at understanding nuanced brand differences
# - Matches your existing app's AI model
# - Still very cost-effective (~$0.005 per full analysis)
```